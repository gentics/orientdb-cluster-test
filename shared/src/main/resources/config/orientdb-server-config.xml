<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<orient-server>
	<handlers>
		<handler
			class="com.orientechnologies.orient.graph.handler.OGraphServerHandler">
			<parameters>
				<parameter name="enabled" value="true" />
				<parameter name="graph.pool.max" value="50" />
			</parameters>
		</handler>
		<!-- CLUSTER PLUGIN, TO TURN ON SET THE 'ENABLED' PARAMETER TO 'true' -->
		<handler
			class="com.orientechnologies.orient.server.hazelcast.OHazelcastPlugin">
			<parameters>
				<parameter name="nodeName" value="%NODENAME%" />
				<parameter name="enabled" value="true" />
				<parameter name="configuration.db.default"
					value="config/default-distributed-db-config.json" />
				<parameter name="configuration.hazelcast" value="config/hazelcast.xml" />
			</parameters>
		</handler>
	</handlers>
	<network>
		<sockets>
			<socket
				implementation="com.orientechnologies.orient.server.network.OServerSSLSocketFactory"
				name="ssl">
				<parameters>
					<parameter value="false" name="network.ssl.clientAuth" />
					<parameter value="config/cert/orientdb.ks" name="network.ssl.keyStore" />
					<parameter value="password" name="network.ssl.keyStorePassword" />
					<parameter value="config/cert/orientdb.ks" name="network.ssl.trustStore" />
					<parameter value="password" name="network.ssl.trustStorePassword" />
				</parameters>
			</socket>
			<socket
				implementation="com.orientechnologies.orient.server.network.OServerSSLSocketFactory"
				name="https">
				<parameters>
					<parameter value="false" name="network.ssl.clientAuth" />
					<parameter value="config/cert/orientdb.ks" name="network.ssl.keyStore" />
					<parameter value="password" name="network.ssl.keyStorePassword" />
					<parameter value="config/cert/orientdb.ks" name="network.ssl.trustStore" />
					<parameter value="password" name="network.ssl.trustStorePassword" />
				</parameters>
			</socket>
		</sockets>
		<protocols>
			<!-- Default registered protocol. It reads commands using the HTTP protocol 
				and write data locally -->
			<protocol name="binary"
				implementation="com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary" />
			<protocol name="http"
				implementation="com.orientechnologies.orient.server.network.protocol.http.ONetworkProtocolHttpDb" />
		</protocols>
		<listeners>
			<listener protocol="binary" ip-address="0.0.0.0" port-range="2424-2430"
				socket="default" />
			<!-- <listener protocol="binary" ip-address="0.0.0.0" port-range="2434-2440" 
				socket="ssl"/> -->
			<listener protocol="http" ip-address="0.0.0.0" port-range="2480-2490"
				socket="default">
				<parameters>
					<!-- Connection's custom parameters. If not specified the global configuration 
						will be taken -->
					<parameter name="network.http.charset" value="utf-8" />
					<parameter value="true" name="network.http.jsonResponseError" />
					<!-- Define additional HTTP headers to always send as response -->
					<!-- Allow cross-site scripting -->
					<!-- parameter name="network.http.additionalResponseHeaders" value="Access-Control-Allow-Origin: 
						*;Access-Control-Allow-Credentials: true" / -->
				</parameters>
				<commands>
					<command
						pattern="GET|www GET|studio/ GET| GET|*.htm GET|*.html GET|*.xml GET|*.jpeg GET|*.jpg GET|*.png GET|*.gif GET|*.js GET|*.css GET|*.swf GET|*.ico GET|*.txt GET|*.otf GET|*.pjs GET|*.svg GET|*.json GET|*.woff GET|*.woff2 GET|*.ttf GET|*.svgz"
						implementation="com.orientechnologies.orient.server.network.protocol.http.command.get.OServerCommandGetStaticContent">
						<parameters>
							<!-- Don't cache html resources in development mode -->
							<entry name="http.cache:*.htm *.html"
								value="Cache-Control: no-cache, no-store, max-age=0, must-revalidate\r\nPragma: no-cache" />
							<!-- Default caching -->
							<entry name="http.cache:default" value="Cache-Control: max-age=120" />
						</parameters>
					</command>
					<command pattern="GET|gephi/*"
						implementation="com.orientechnologies.orient.graph.server.command.OServerCommandGetGephi" />
				</commands>
			</listener>
		</listeners>
		<cluster>
		</cluster>
	</network>
	<!-- 
	<storages>
		<storage name="db_%NODENAME%" path="%DB_PATH%" userName="admin" userPassword="admin" loaded-at-startup="false" />
	</storages>
	 -->
	<users>
		<user name="root" password="finger" resources="*" />
		<user name="admin" password="finger" resources="*" />
	</users>
	<properties>
		<!-- DATABASE POOL: size min/max -->
		<entry name="db.pool.min" value="1" />
		<entry name="db.pool.max" value="50" />
		<!-- PROFILER: configures the profiler as <seconds-for-snapshot>,<archive-snapshot-size>,<summary-size> -->
		<entry name="profiler.enabled" value="true" />
		<!-- <entry name="profiler.config" value="30,10,10" /> -->
		<entry name="plugin.directory" value="%PLUGIN_DIRECTORY%" />
		<entry name="server.database.path" value="%DB_PARENT_PATH%"/>

		<!-- LOG: enable/Disable logging. Levels are: finer, fine, finest, info, 
			warning -->
		<entry name="log.console.level" value="%CONSOLE_LOG_LEVEL%" />
		<entry name="log.file.level" value="%FILE_LOG_LEVEL%" />
	</properties>
</orient-server>
